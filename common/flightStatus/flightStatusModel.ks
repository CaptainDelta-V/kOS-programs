@LAZYGLOBAL OFF.

LOCAL STOP_RUNNING_FLIGHT_STATUS_SCREEN TO FALSE.


FUNCTION FLIGHT_STATUS_MODEL {
    
    PARAMETER SCREEN_TITLE TO "FLIGHT OPERATION".
    PARAMETER FLIGHT_STATUS TO "UNKNOWN".        

    LOCAL FLIGHT_STATUS_FIELDS TO LEXICON().

    FUNCTION GET_FLIGHT_STATUS { 
        RETURN FLIGHT_STATUS.
    }

    FUNCTION GET_TITLE { 
        RETURN "==== " + SCREEN_TITLE + " ====". 
    }

    FUNCTION UPDATE { 
        PARAMETER NEW_STATUS.
        SET FLIGHT_STATUS TO NEW_STATUS.
    }

    FUNCTION ADD_FIELD { 
        PARAMETER FIELD_NAME.
        PARAMETER FIELD_VALUE.
        
        SET FLIGHT_STATUS_FIELDS[FIELD_NAME] TO FIELD_VALUE.        
    }

    FUNCTION UPDATE_FIELD { 
        PARAMETER FIELD_NAME. 
        PARAMETER FIELD_VALUE. 

        SET FLIGHT_STATUS_FIELDS[FIELD_NAME] TO FIELD_VALUE.
    }

    FUNCTION PRINT_STATUS_SCREEN { 
        CLEARSCREEN.
        PRINT GET_TITLE().
        PRINT "STATUS: " + FLIGHT_STATUS.
                
        FOR KEY IN FLIGHT_STATUS_FIELDS:KEYS { 

            LOCAL STATUS_FIELD TO FLIGHT_STATUS_FIELDS[KEY].
            LOCAL OUTPUT_VALUE TO STATUS_FIELD.            
                            
            IF STATUS_FIELD:HASSUFFIX("CALL") {
                // can only call getters with no params
                SET OUTPUT_VALUE TO STATUS_FIELD:CALL().
            }

            PRINT KEY + ": " + OUTPUT_VALUE.
        }
    }
    
    RETURN LEXICON(
        "GET_FLIGHT_STATUS", GET_FLIGHT_STATUS@,
        "GET_TITLE", GET_TITLE@,
        "PRINT_STATUS_SCREEN", PRINT_STATUS_SCREEN@, 
        "ADD_FIELD", ADD_FIELD@, 
        "UPDATE", UPDATE@,
        "UPDATE_FIELD", UPDATE_FIELD@
    ).
}

GLOBAL FUNCTION RUN_FLIGHT_STATUS_SCREEN { 
    PARAMETER FLIGHT_STATUS.
    PARAMETER DELAY TO 0.5.

    SET STOP_RUNNING_FLIGHT_STATUS_SCREEN TO FALSE. 

    WHEN NOT STOP_RUNNING_FLIGHT_STATUS_SCREEN THEN {         
        FLIGHT_STATUS:PRINT_STATUS_SCREEN().
        
        WAIT DELAY.
        PRESERVE.        
    }
}

GLOBAL FUNCTION STOP_RUN_FLIGHT_STATUS_SCREEN { 
    SET STOP_RUNNING_FLIGHT_STATUS_SCREEN TO TRUE.
}