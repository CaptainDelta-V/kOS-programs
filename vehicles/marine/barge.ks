LOCAL TARGET_LNG TO -63.6. //-62.33.
LOCAL TARGET_LAT TO 0.

LOCAL METERS_PER_DEGREE TO SHIP:BODY:RADIUS * 2 * CONSTANT:PI / 360.

LOCAL AVERAGESPEED TO 0.
LOCAL SPEEDLOOP TO PIDLOOP(0.01, 0.01, 0.005, 0, 1).
SET SPEEDLOOP:SETPOINT TO 50.
UNTIL FALSE
{
	LOCAL POS TO SHIP:GEOPOSITION.
	LOCAL DX TO (TARGET_LNG - POS:LNG) * METERS_PER_DEGREE.
	LOCAL DY TO (TARGET_LAT - POS:LAT) * METERS_PER_DEGREE.
	LOCAL DS TO SQRT(DX * DX + DY * DY).
	SET SPEEDLOOP:SETPOINT TO MIN(50, DS / 100).
	LOCK THROTTLE TO SPEEDLOOP:UPDATE(TIME:SECONDS, SHIP:GROUNDSPEED).
	LOCAL SPEED TO SHIP:GROUNDSPEED.
	SET AVERAGESPEED TO (AVERAGESPEED * 99 + SPEED) / 100.
	LOCAL TTA TO DS / (AVERAGESPEED + 0.01).
	
	IF DS / (SHIP:GROUNDSPEED + 0.01) < 20
		BREAK.
		
	LOCAL YAXIS TO NORTH:VECTOR().
	LOCAL XAXIS TO VCRS(UP:VECTOR(), YAXIS).
	LOCAL STEER TO (XAXIS * DX + YAXIS * DY):NORMALIZED().
	LOCK STEERING TO STEER.
	
	// SET AXIS1 TO VECDRAW(V(0, 0, 0), XAXIS, RGB(255, 0, 0), "X-AXIS", 50, TRUE, 0.1).
	// SET AXIS2 TO VECDRAW(V(0, 0, 0), YAXIS, RGB(0, 255, 0), "Y-AXIS", 50, TRUE, 0.1).
	// SET AXIS3 TO VECDRAW(V(0, 0, 0), STEER, RGB(0, 0, 255), "STEER", 50, TRUE, 0.1).
	
	CLEARSCREEN.
	
	LOCAL MINUTES TO ROUND(TTA / 60 - 0.5, 0).
	LOCAL SECONDS TO ROUND(TTA - MINUTES * 60, 0).
	LOCAL MSTR TO "".
	LOCAL SSTR TO "".
	IF MINUTES < 10
		SET MSTR TO "0".
	IF SECONDS < 10
		SET SSTR TO "0".
	PRINT "TIME TO ARRIVAL: " + MSTR + MINUTES + ":" + SSTR + SECONDS.
}

WAIT 1.
BRAKES ON.
LOCK THROTTLE TO 0.
SET SHIP:CONTROL:PILOTMAINTHROTTLE TO 0.
WAIT 1.
SAS OFF.